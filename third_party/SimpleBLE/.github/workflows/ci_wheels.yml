name: Build Wheels

on:
  workflow_call:
    inputs:
      os:
        description: "Operating System to run on"
        type: string
        required: true


jobs:
  build-wheels:
    runs-on: ${{ inputs.os }}

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: "pip"

      - name: Install dependencies
        run: pip install -r simplepyble/requirements.txt

      - name: Build wheel
        uses: pypa/cibuildwheel@v2.19.2
        env:
          CIBW_BUILD: cp39-* # Only build for Python 3.9
          CIBW_BUILD_VERBOSITY: 3
          CIBW_BEFORE_ALL_LINUX: "yum update -y && yum group install -y \"Development Tools\" && yum install -y dbus-devel"
          CIBW_ARCHS_LINUX: x86_64 i686 aarch64
          CIBW_ARCHS_MACOS: x86_64 universal2 arm64
          CIBW_ARCHS_WINDOWS: AMD64 x86
          CIBW_SKIP: "*musllinux_* pp*"
          MACOSX_DEPLOYMENT_TARGET: 10.15

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: simpleble-wheels-${{ inputs.os }}
          path: wheelhouse/*.whl

      - name: Check Packages
        run: twine check wheelhouse/*.whl

      - name: Publish packages
        if: ${{ env.HAS_TWINE_USERNAME == 'true' }}
        run: |
          twine upload --repository testpypi --skip-existing wheelhouse/*.whl --verbose
        env:
          HAS_TWINE_USERNAME: ${{ secrets.TEST_PYPI_USER != '' }}
          TWINE_USERNAME: ${{ secrets.TEST_PYPI_USER }}
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_PASSWORD }}
